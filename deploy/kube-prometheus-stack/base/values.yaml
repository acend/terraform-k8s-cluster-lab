global:
  rbac:
    createAggregateClusterRoles: true
kubeProxy:
  enabled: true # kube-proxy less installation
kubeScheduler:
  enabled: false # scraping via pushprox as binded to localhost
kubeControllerManager:
  enabled: false # scraping via pushprox as binded to localhost
kubeEtcd:
  enabled: false # scraping via pushprox as binded to localhost
grafana:
  enabled: true
prometheus:
  prometheusSpec:
    resources:
      requests:
        cpu: 200m
        memory: 2600Mi
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

alertmanager:
  config:
    route:
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - receiver: 'null'
        matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
    receivers:
    - name: 'null'
      
  alertmanagerSpec:
    storage: 
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

prometheus-node-exporter:
  resources:
    requests:
      cpu: 10m
      memory: 20Mi