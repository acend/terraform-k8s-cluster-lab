---
apiVersion: helm.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: default
spec:
  credentials:
    source: InjectedIdentity
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: default
spec:
  credentials:
    source: InjectedIdentity
---
apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: gitea
spec:
  credentials:
    - filename: gitea-admin-credentials
      source: Secret
      secretRef:
        name: gitea-admin-credentials
        namespace: gitea
        key: password
  configuration: |
    variable "gitea_admin_username" {
      type    = string
      default = "gitea_admin"
    }

    variable "gitea_uri" {
      type = string
      default = "http://gitea-http.gitea.svc.cluster.local:3000"
    }

    provider "restapi" {
      uri                  = var.gitea_uri
      write_returns_object = true
      username             = var.gitea_admin_username
      password             = file("gitea-admin-credentials")
    }


    // Modules _must_ use remote state. The provider does not persist state.
    terraform {
      backend "kubernetes" {
        secret_suffix     = "providerconfig-tf-gitea"
        namespace         = "crossplane"
        in_cluster_config = true
      }
    }
---
apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: hosttech
spec:
  credentials:
    - filename: hosttech-secret
      source: Secret
      secretRef:
        name: hosttech-secret
        namespace: cert-manager
        key: token
  configuration: |
    terraform {
      required_providers {
        restapi = {
          source = "Mastercard/restapi"
        }
      }
    }

    provider "restapi" {
      uri                  = "https://api.ns1.hosttech.eu"
      write_returns_object = true

      headers = {
        Authorization = "Bearer ${file("hosttech-secret")}"
        ContentType   = "application/json"
      }
    }

    // Modules _must_ use remote state. The provider does not persist state.
    terraform {
      backend "kubernetes" {
        secret_suffix     = "providerconfig-tf-hosttech"
        namespace         = "crossplane"
        in_cluster_config = true
      }
    }
