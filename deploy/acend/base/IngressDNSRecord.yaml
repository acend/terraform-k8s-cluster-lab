---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xingressdnsrecords.acend.ch
spec:
  group: acend.ch
  names:
    kind: XIngressDNSRecord
    plural: xingressdnsrecords
  claimNames:
    kind: IngressDNSRecord
    plural: ingressdnsrecords
  defaultCompositionRef:
    name: ingressdnsrecords
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              parameters:
                type: object
                properties:
                  type:
                    type: string
                  name:
                    type: string
                  comment:
                    type: string
                required:
                - type
                - name
                - comment
            required:
              - parameters
          status:
            description: A Status represents the observed state
            properties:
              ipv4:
                type: string
                x-kubernetes-preserve-unknown-fields: true
              ipv6:
                type: string
                x-kubernetes-preserve-unknown-fields: true
            type: object
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    crossplane.io/xrd: xingressdnsrecords.acend.ch
  name: ingressdnsrecords
spec:
  compositeTypeRef:
    apiVersion: acend.ch/v1alpha1
    kind: XIngressDNSRecord
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Service
                metadata:
                  name: ingress-haproxy-haproxy-ingress
                  namespace: ingress-haproxy
            managementPolicy: Observe
            providerConfigRef:
              name: default
        name: k8s-svc
        patches:
        - fromFieldPath: spec.parameters.type
          toFieldPath: metadata.name
          transforms:
          - string:
              fmt: ingress-svc-%s
              type: Format
            type: string
          - string:
              convert: ToLower
              type: Convert
            type: string
          type: FromCompositeFieldPath
        - fromFieldPath: status.atProvider.manifest.status.loadBalancer.ingress[0].ip
          toFieldPath: status.ipv4
          type: ToCompositeFieldPath
        - fromFieldPath: status.atProvider.manifest.status.loadBalancer.ingress[1].ip
          toFieldPath: status.ipv6
          type: ToCompositeFieldPath
      - base:
          apiVersion: tf.upbound.io/v1beta1
          kind: Workspace
          spec:
            forProvider:
              module: "variable \"type\" {\n  type = string\n}\nvariable \"name\"
                {\n  type = string\n}\nvariable \"ipv4\" {\n  type = string\n}\nvariable
                \"ipv6\" {\n  type = string\n}\nvariable \"comment\" {\n  type = string\n}\n\nlocals
                {\n  hosttech-dns-zone-id = \"242898\"\n}\nmodule \"api-aaaa-record\"
                {\n\n  source = \"git::https://github.com/acend/terraform-k8s-cluster-lab.git//modules/training-cluster/modules/hosttech-dns-record\"\n\n
                \ hosttech-dns-zone-id = local.hosttech-dns-zone-id \n\n  type    =
                var.type\n  name    = var.name\n  ipv6    = var.ipv6\n  comment =
                var.comment\n  ttl     = 3600\n\n  count = var.type == \"AAAA\" ?
                1 : 0\n}\n\nmodule \"api-a-record\" {\n\n  source = \"git::https://github.com/acend/terraform-k8s-cluster-lab.git//modules/training-cluster/modules/hosttech-dns-record\"\n\n
                \ hosttech-dns-zone-id = local.hosttech-dns-zone-id \n\n  type    =
                var.type\n  name    = var.name\n  ipv4    = var.ipv4\n  comment =
                var.comment\n  ttl     = 3600\n\n  count = var.type == \"A\" ? 1 :
                0\n}\n"
              source: Inline
              vars:
              - key: type
              - key: name
              - key: ipv4
              - key: ipv6
              - key: comment
            providerConfigRef:
              name: hosttech
        name: tf_hosttech_record
        patches:
        - fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.type
          toFieldPath: spec.forProvider.vars[0].value
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.name
          toFieldPath: spec.forProvider.vars[1].value
          type: FromCompositeFieldPath
        - fromFieldPath: status.ipv4
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.vars[2].value
          type: FromCompositeFieldPath
        - fromFieldPath: status.ipv6
          policy:
            fromFieldPath: Required
          toFieldPath: spec.forProvider.vars[3].value
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.comment
          toFieldPath: spec.forProvider.vars[4].value
          type: FromCompositeFieldPath
    step: patch-and-transform
